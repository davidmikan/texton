main.py:

load() loads a "world" object, a "activeroom" object and a "player" object

world object: contains a dict of rooms "rooms", each key is the rooms id and value is an element 
containing the room: it has it's attributes in a dict "self.attr", properties and objects as 
objects in "self.objects"

activeroom object: is a link to the room object in world.rooms with the id player.inroom

player object: contains an inventory, which is a list of objects

get_prop(etree.Element) : searches for properties tag and returns a dictionary of properties with tag name as key and tag text as value

prop_xml(dictionary): takes dictionary with tag name as keys and tag text as values, returns etree.Element (<properties/> )


# -- EVENTS DOCUMENTATION -- #

General structure:
    - Event-Object:     

Sytax for objects/properties:
    [objects]: o.id(.property)
    [rooms]: r.id(.property)
    [world]: w(.property)
    [player]: p(.property)
    ex.: o.001.name

EventParser Modules:
    compare
